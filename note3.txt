・条件分岐
・if文
if ( 式 ){
    実際の処理
}

else if () {}
else {}

・switch文
違う条件で同じ処理の時
switch (weekIndex) {
    case Calender.
}

・Array : イミュータブルな配列
一度データを決めてしまうとデータの増減はできない
中身を更新することはできる

String[] drinks = {1, 2, 3}

・for文
for (int i=1; i <=10 i++){
    int num += i;
}

・foreach
for (String drink : drinks){
    System.out.println(drink);
}

・static メソッド
自分で定義することも可能

・インスタンス
staticのつかないやつ
public class Character{
    
}

・コレクション型：
ArrayList<データ型> 変数 = new ArrayList<>();
ミュータブル
インデックスを取得：get
データを変える: set
ArrayList<String:key, String:value>

・カプセル化


抽象クラス
プログラムを実装しないメソッドを1つ以上持つクラスのこと

目的：継承関係でメソッドをオーバーライド


抽象クラスはクラス名の前に abstract
public abstract class クラス名();

abstractメソッド
抽象メソッドはメソッド前に abstract
public abstract メソッド名();


public サブクラス extends 抽象クラス{

}

抽象クラス