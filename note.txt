・条件分岐
if, else, else if
if (条件式) {
    条件に合っていた時の処理
}

・論理演算子
論理積    AND    &&
論理和    OR     ||
論理否定  NOT     !

・ネスト
if文 を繰り返す

・switch文
if文のように条件分岐できる
switch 切り替え
case ～の場合
break 休み
default 初期

calender 機能
日曜始まり (番号 : 1 ～)


・void
戻り値のないメソッド
※ return で戻り値を返す処理をするとコンパイル時にエラーになる

・オーバーロード
同じクラスの中で、同じ名前のメソッドを複数定義できるメソッド
→ 引数を変えたいときに便利！
over load : 過負荷(にする) / 過重積載(にする) / 過重負担(をかける)

・オブジェクト指向 : Object-orientation
oop : オブジェクト指向プログラミング

・メソッド 何か処理する
クラスが持っている機能のことで、
実際にプログラムが実行されるときに実行される内容が書かれている

・フィールド(プロパティ)
クラスが持っている情報のことで、
そのクラスがどのような情報を扱うのかが書かれている

・ポリモーフィズム(=多態性)
同じメソッド名でも、異なる動作を実行

・オブジェクト指向の三大要素
 ・継承
 ・カプセル化
 ・ポリモーフィズム

・オーバーライド
スーパークラスで定義したメソッドをサブクラスで再定義すること
pythonにもあったやつ

・アノテーション
メソッドやプロパティ定義の前に @(アットマーク) で記述する記法

・イミュータブル (immutable)
Array型のように配列の値を追加、削除ができない
データの数を変えられない ← 値の更新はできる
不変データ

・ミュータブル
可変データ

・リスト (List)
java.util.List
順序通りに並ぶ
Listは index(要素番号)で指定したコレクション
List<データ型> 変数名;
Arrays.asList() で初期化

・ArrayList / k
Listを拡張したクラス
ArrayList<データ型> 変数名

Set
Queue
Deque